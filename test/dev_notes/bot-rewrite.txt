-------
init
-------

1) Initialize Game and AI;
2) Start listening TCP
3) When first data is received from TCP, find out which player is me and if I go first.
4) Update Game and AI THEN proceed to mulligan. If I'm first, setTimeout to wait.

Must occur in order:

data -> update game -> update AI -> mulligan ->first? add turn to turn stack: wait;

potentially contain reference to game in AI, and then cut out the potential race condition of updating.

*potential research: look for game stage changes to signal end of turns/mulligan 
*potential player id: look for hand with total card cost > 0;
The one that is non-zero is you.

-------
when it's my turn and it's NOT the mulligan
-------

create a turn stack to begin execution after mulligan phase has ended?

1) set timeout to give time for graphics
2) Calculate best move
2.5) set one time data listener
3) Execute move (hero power/play/etc)
4) Update Game && AI 
5) Repeat 2-4 until no more mana;
6) Attack targets as appropriate (smorc)
7) End turn

must occur in order:

wait for graphics -> calculate and set data listener -> execute move -> update game
-> totalmana - mana > 0 && any possible plays ? restart@2 : -> attack and end turn;

-------
When the game is over
-------

1) Record to fs a victory/loss
2) Reinitialize AI && Game
3) Gracefully process.exit() (or setTimeout and do another game)
4) Rerun init
